<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mybatis.mapper.WorkerDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.mybatis.entity.Worker">
        <id column="id" property="id"/>
        <result column="worker_status" property="workerStatus"/>
        <result column="worker_name" property="workerName"/>
        <result column="account_name" property="accountName"/>
        <result column="worker_sex" property="workerSex"/>
        <result column="mobile_code" property="mobileCode"/>
        <result column="idcard_code" property="idcardCode"/>
        <result column="bank_code" property="bankCode"/>
        <result column="attestation" property="attestation"/>
        <result column="idcardFront" property="idcardFront"/>
        <result column="idcardBack" property="idcardBack"/>
        <result column="member_id" property="memberId"/>
        <result column="sub_account_no" property="subAccountNo"/>
        <result column="attestation_video" property="attestationVideo"/>
        <result column="user_name" property="userName"/>
        <result column="user_pwd" property="userPwd"/>
        <result column="skill" property="skill"/>
        <result column="agreementSign" property="agreementSign"/>
        <result column="agreementUrl" property="agreementUrl"/>
        <result column="head_portraits" property="headPortraits"/>
        <result column="picture" property="picture"/>
        <result column="business_license" property="businessLicense"/>
        <result column="credit_code" property="creditCode"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
    </resultMap>


    <resultMap id="WorkerPo" type="com.example.mybatis.po.WorkerPo">
        <id column="id" property="wId"/>
        <result column="worker_name" property="workerName"/>
        <result column="mobile_code" property="mobileCode"/>
        <result column="idcard_code" property="idcardCode"/>
        <result column="attestation" property="attestation"/>
        <result column="agreementUrl" property="agreementUrl"/>
        <result column="create_date" property="createDate"/>
        <result column="is_deliver" property="isDeliver"/>
        <result column="achievement_desc" property="achievementDesc"/>
        <result column="achievement_date" property="achievementDate"/>
        <result column="achievement_files" property="achievementFiles"/>
    </resultMap>

    <resultMap id="WorkerPos" type="com.example.mybatis.po.WorkerPo">
        <id column="id" property="wId"/>
        <result column="worker_name" property="workerName"/>
        <result column="mobile_code" property="mobileCode"/>
        <result column="idcard_code" property="idcardCode"/>
        <result column="attestation" property="attestation"/>
        <result column="agreementUrl" property="agreementUrl"/>
        <result column="create_date" property="createDate"/>
        <result column="check_money" property="checkMoney"/>
        <result column="is_deliver" property="isDeliver"/>
        <result column="achievement_date" property="achievementDate"/>
        <result column="achievement_desc" property="achievementDesc"/>
        <result column="achievement_files" property="achievementFiles"/>

    </resultMap>

    <resultMap id="workerPassVo" type="com.example.mybatis.vo.WorkerPassVo">
        <id column="id" property="wId"/>
        <result column="worker_name" property="workerName"/>
        <result column="mobile_code" property="mobileCode"/>
        <result column="idcard_code" property="idcardCode"/>
        <result column="attestation" property="attestation"/>
        <result column="agreementUrl" property="agreementUrl"/>
        <result column="create_date" property="createDate"/>
        <result column="is_deliver" property="isDeliver"/>
        <result column="acceptance_amount" property="acceptanceAmount"/>
        <result column="status" property="status"/>
        <result column="achievement_desc" property="achievementDesc"/>
    </resultMap>

    <resultMap id="workerInfo" type="com.example.mybatis.vo.WorkerInfoVo">
        <result column="task_number" property="taskNumber"/>
        <result column="total_revenue" property="totalRevenue"/>
        <result column="total_tax" property="totalTax"/>
        <result column="invoice_number" property="invoiceNumber"/>
    </resultMap>

    <resultMap id="workerPayInfo" type="com.example.mybatis.vo.WorkerPayInfoVo">
        <result column="payment_order_id" property="paymentOrderId"/>
        <result column="company_s_name" property="companySName"/>
        <result column="platform_service_provider" property="platformServiceProvider"/>
        <result column="worker_name" property="workerName"/>
        <result column="package_status" property="packageStatus"/>
        <result column="payment_status" property="paymentStatus"/>
        <result column="task_money" property="taskMoney"/>
        <result column="create_date" property="createDate"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, worker_status, worker_name, account_name, worker_sex, mobile_code, idcard_code, bank_code, attestation, idcardFront, idcardBack, attestation_video, user_name, user_pwd, skill, agreementSign, agreementUrl, head_portraits, picture, business_license, create_date, update_date
    </sql>

    <sql id="ByIdAndAccountNameAndMobile">
        <if test="workerId != null and workerId != ''">
            and a.id = #{workerId}
        </if>
        <if test="accountName != null and accountName != ''">
            and account_name like CONCAT('%',#{accountName},'%')
        </if>
        <if test="mobileCode != null and mobileCode != ''">
            and mobile_code = #{mobileCode}
        </if>
    </sql>

    <select id="selectByIdAndAccountNameAndMobile" resultMap="BaseResultMap" parameterType="list">
        select
        a.id, account_name, mobile_code, idcard_code, bank_code, attestation, agreementSign ,a.create_date
        from tb_worker a join tb_company_worker b on a.id = b.worker_id
        <where>
            b.company_id = #{merchantId}
        <if test="accountName != null and accountName != ''">
            and account_name like CONCAT('%',#{accountName},'%')
        </if>
        <if test="mobileCode != null and mobileCode != ''">
            and mobile_code = #{mobileCode}
        </if>
        </where>
    </select>

    <select id="selectWorkerQueryNot" resultMap="BaseResultMap" parameterType="list">
        select
        a.id, account_name, mobile_code, idcard_code, bank_code, attestation, agreementSign ,a.create_date
        from tb_worker a join tb_company_worker b on a.id = b.worker_id
        <where>
            b.company_id in
            <foreach collection="companyIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            <include refid="ByIdAndAccountNameAndMobile"></include>
            and (attestation = 0
            or agreementSign = 0)
        </where>
    </select>

    <select id="selectWorkerQuery" resultMap="BaseResultMap" parameterType="list">
        select
        a.id, account_name, mobile_code, idcard_code, bank_code, attestation, agreementSign ,a.create_date
        from tb_worker a join tb_company_worker b on a.id = b.worker_id
        <where>
            b.company_id in
            <foreach collection="companyIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            <include refid="ByIdAndAccountNameAndMobile"></include>
            and attestation = 1
            and agreementSign = 1
        </where>
    </select>

    <select id="getWorkerByTaskId" resultMap="WorkerPo">
        SELECT
            w.id,
            w.account_name AS worker_name,
            w.mobile_code,
            w.idcard_code,
            w.attestation,
            w.agreementUrl,
            IF (ISNULL(wt.achievement_date),0,1) AS is_deliver,
            wt.achievement_date,
            wt.achievement_desc,
            wt.achievement_files,
            wt.create_date
        FROM
            tb_worker_task AS wt,
            tb_worker AS w
        WHERE
	    wt.worker_id = w.id
	    AND wt.task_id=#{taskId}
	    AND wt.task_status = 0
    </select>

    <select id="getCheckByTaskId" resultMap="WorkerPos">
        SELECT
            w.id,
            w.account_name as worker_name,
            w.mobile_code,
            w.idcard_code,
            w.attestation,
            w.agreementUrl,
            wt.check_money,
            IF (ISNULL(wt.achievement_date),0,1) AS is_deliver,
            wt.achievement_date,
            wt.achievement_desc,
            wt.achievement_files,
            wt.create_date
        FROM
            tb_worker_task AS wt,
            tb_worker AS w
        WHERE
            wt.worker_id = w.id
        AND wt.task_id =#{taskId}
    </select>

    <resultMap id="worekerPaymentListPo" type="com.example.mybatis.po.WorekerPaymentListPo">
        <result column="payment_order_id" property="paymentOrderId"/>
        <result column="tax_name" property="taxName"/>
        <result column="merchant_name" property="merchantName"/>
        <result column="worker_name" property="workerName"/>
        <result column="package_status" property="packageStatus"/>
        <result column="real_money" property="realMoney"/>
        <result column="payment_date" property="paymentDate"/>
        <result column="invoice_status" property="invoiceStatus"/>
    </resultMap>


    <!--查询创客支付明细-->
    <select id="workerPaymentList" parameterType="list" resultMap="worekerPaymentListPo">
        select a.payment_order_id,
        (case when c.platform_service_provider is null then d.platform_service_provider else c.platform_service_provider end)as tax_name,
        (case when c.company_s_name is null then d.company_s_name else c.company_s_name end)as merchant_name,
        a.worker_name, a.package_status, a.real_money,
        IFNULL((case when c.payment_date is null then d.payment_date else c.payment_date end),a.create_date) as 'payment_date',
        (case when b.id is null then 0 else 1 end)as invoice_status from tb_payment_inventory a
        left join tb_invoice_payment_inventory b on a.id = b.payment_inventory_id
        left join tb_payment_order c on a.payment_order_id = c.id
        left join tb_payment_order_many d on a.payment_order_id = d.id
        where a.worker_id = #{workerId}
        ORDER BY payment_date DESC
    </select>

    <sql id="WorkerPaymentSql">
        select a.payment_order_id,
        (case when c.platform_service_provider is null then d.platform_service_provider else c.platform_service_provider
        end)as tax_name,
        (case when c.company_s_name is null then d.company_s_name else c.company_s_name end)as merchant_name,
        a.worker_name, a.package_status, a.real_money,
        IFNULL((case when c.payment_date is null then d.payment_date else c.payment_date end),a.create_date) as
        'payment_date',
        (case when b.id is null then 0 else 1 end)as invoice_status from tb_payment_inventory a
        left join tb_invoice_payment_inventory b on a.id = b.payment_inventory_id
        left join tb_payment_order c on a.payment_order_id = c.id and c.payment_order_status &gt;= 2
        left join tb_payment_order_many d on a.payment_order_id = d.id and d.payment_order_status &gt;= 2
    </sql>

    <!--查询监管部门所监管的创客支付明细-->
    <select id="regulatorWorkerPaymentList" parameterType="list" resultMap="worekerPaymentListPo">
        <include refid="WorkerPaymentSql"/>
        where a.worker_id = #{workerId}
        and a.payment_order_id in
        <foreach collection="paymentOrderIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY payment_date DESC
    </select>

    <!--查询监管部门所监管的创客支付明细-->
    <select id="selectRegulatorWorkerPaymentInfo" parameterType="list" resultMap="worekerPaymentListPo">
        <include refid="WorkerPaymentSql"/>
        <where>
            a.worker_id = #{workerId}
            and a.payment_order_id in
            <foreach collection="paymentOrderIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            <if test="taxName != null and taxName != ''">
                AND tax_name like CONCAT('%',#{taxName},'%')
            </if>
            <if test="companyName != null and companyName != ''">
                AND merchant_name like CONCAT('%',#{companyName},'%')
            </if>
            <if test="startDate != null and startDate != ''">
                AND date(payment_date) &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND date(payment_date) &lt;= #{endDate}
            </if>
        </where>
        ORDER BY payment_date DESC
    </select>

    <!--导出监管部门所监管的创客支付明细-->
    <select id="exportRegulatorWorkerPaymentInfo" parameterType="list" resultMap="worekerPaymentListPo">
        <include refid="WorkerPaymentSql"/>
        <where>
            a.worker_id = #{workerId}
            and a.payment_order_id in
            <foreach collection="paymentOrderIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>

    <resultMap id="workerMakeMoney" type="com.example.mybatis.vo.WorkerVo">
        <result column="real_money" property="realMoney"/>
        <result column="head_portraits" property="headPortraits"/>
        <result column="account_name" property="accountName"/>
    </resultMap>

    <select id="setWorkerMakeMoney" resultMap="workerMakeMoney">
        SELECT SUM(real_money) as real_money ,w.head_portraits,w.account_name
        FROM tb_payment_inventory pi
        INNER JOIN tb_worker w ON w.id=pi.worker_id
        GROUP BY w.id
    </select>


    <select id="getPaasCheckByTaskId" resultMap="workerPassVo">
        SELECT
            w.id,
            w.account_name as worker_name,
            w.mobile_code,
            w.idcard_code,
            w.attestation,
            w.agreementUrl,
            wt.achievement_date,
            wt.achievement_desc,
            wt.achievement_files,
            wt.create_date,
            wt.`status`,
            IF( ISNULL(achievement_date),0,1) as is_deliver,
            wt.check_money as acceptance_amount
        FROM
            tb_worker AS w
        INNER JOIN tb_worker_task wt ON wt.worker_id = w.id
        where wt.task_id=#{taskId} and  wt.task_status=0
    </select>

    <select id="queryWorkerInfo" resultMap="workerInfo">
        SELECT
            (
                SELECT
                    count(1)
                FROM
                    tb_worker_task
                WHERE
                    worker_id = w.id
            ) AS task_number,
            (
                SELECT
                    SUM(real_money)
                FROM
                    tb_payment_inventory
                WHERE
                    worker_id = w.id
            ) AS total_revenue,
            (
                SELECT
                    SUM(tax_amount)
                FROM
                    tb_payment_inventory
                WHERE
                    worker_id = w.id
            ) AS total_tax,
            (
                SELECT
                    COUNT(1)
                FROM
                    tb_payment_inventory pi
                    INNER JOIN tb_payment_order po ON pi.payment_order_id=po.id AND po.is_not_invoice=1
                WHERE
                    pi.worker_id = w.id
            ) +
        (
                SELECT
                    COUNT(1)
                FROM
                    tb_payment_inventory pi
                    INNER JOIN tb_payment_order_many pm ON pi.payment_order_id=pm.id AND pm.is_not_invoice=1
                WHERE
                    pi.worker_id = w.id
            ) AS invoice_number
        FROM
            tb_worker w
        WHERE
            w.id = #{workerId}
    </select>

    <select id="queryWorkerPayInfo" resultMap="workerPayInfo">
        SELECT
            payment_order_id,
        IF (
            package_status = 0,
            (
                SELECT
                    company_s_name
                FROM
                    tb_payment_order
                WHERE
                    pi.payment_order_id = id
            ),
            (
                SELECT
                    company_s_name
                FROM
                    tb_payment_order_many
                WHERE
                    pi.payment_order_id = id
            )
        ) AS company_s_name,
        IF (
            package_status = 0,
            (
                SELECT
                    platform_service_provider
                FROM
                    tb_payment_order
                WHERE
                    pi.payment_order_id = id
            ),
            (
                SELECT
                    platform_service_provider
                FROM
                    tb_payment_order_many
                WHERE
                    pi.payment_order_id = id
            )
        ) AS platform_service_provider,
        pi.worker_name,pi.package_status,pi.task_money,pi.payment_status,pi.create_date
        FROM
            tb_payment_inventory pi
        WHERE
            pi.worker_id =#{param2}
    </select>

    <resultMap id="WorkerCompanyByID" type="com.example.mybatis.vo.WorkerCompanyVo">
        <result column="id" property="id"/>
        <result column="account_name" property="accountName"/>
        <result column="mobile_code" property="mobileCode"/>
        <result column="idcard_code" property="idcardCode"/>
    </resultMap>

    <select id="queryWorkerCompanyByID" resultMap="WorkerCompanyByID">
        SELECT
            w.id,
            w.account_name,
            w.mobile_code,
            w.idcard_code
        FROM
            tb_company_worker cw
        INNER JOIN tb_worker w ON cw.worker_id = w.id
        WHERE
            cw.company_id = #{param2}
        AND w.attestation = 1
        AND w.agreementSign = 2
    </select>
</mapper>
