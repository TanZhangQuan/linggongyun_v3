spring:
  redis:
    host: 127.0.0.1  # Redis服务器地址
    port: 6379 # Redis服务器连接端口
    password: linggongyun_v3 # Redis服务器连接密码（默认为空）
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接数
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000 # 连接超时时间（毫秒）
  data:
    redis:
      repositories:
        enabled: false

  servlet:
    multipart:
      # 单个文件的最大值
      max-file-size: 40MB
      # 上传文件总的最大值
      max-request-size: 100MB



#本地图片存储路径
PathImage_KEY: "D:/upload/image/"

#本地excel存储路径
PathExcel_KEY: "D:/upload/excel/"

#本地视频存储路径
PathVideo_KEY: "D:/upload/video/"

#图片的访问路径
fileStaticAccesspathImage: "/static/image/"

#excel的访问路径
fileStaticAccesspathExcel: "/static/excel/"

#视频的访问路径
fileStaticAccesspathVideo: "/static/Video/"

#模板文件
TemplateFile:
  #  合同模板
  Contract: "D:/TemplateFile/test.pdf"
  #  总包+分包支付明细模板
  TotalPayInventory: "D:/TemplateFile/inventory.xlsx"
  #  众包支付明细模板
  ManyPayInventory: "D:/TemplateFile/inventory.xlsx"
  #  总包+分包交付支付验收单
  TotalAcceptanceCertificate: "D:/TemplateFile/acceptanceCertificate.xlsx"
  #  众包交付支付验收单
  ManyAcceptanceCertificate: "D:/TemplateFile/acceptanceCertificate.xlsx"
  #  导入创客的模板
  ImportWorker: "D:/TemplateFile/importWorker.xlsx"
  #  模板文件夹路径
  Path: "D:/TemplateFile/"
  #  模板访问路径
  StaticAccesspath: "/static/TemplateFile/"

#发送签署合同应用的密钥
appSecret: "86d20a7f49bc3c4c20bae23d369d8853"

salary:
  #连连银通公钥（不需替换，这是连连公钥，用于报文加密和连连返回响应报文时验签，不是商户生成的公钥.)
  PUBLIC_KEY_ONLINE: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCSS/DiwdCf/aZsxxcacDnooGph3d2JOj5GXWi+q3gznZauZjkNP8SKl3J2liP0O6rU/Y/29+IUe+GTMhMOFJuZm1htAtKiu5ekW0GlBMWxf4FPkYlQkPE0FtaoMP3gYfh+OwI+fIRrpW3ySn3mScnc6Z700nU/VYrRkfcSCbSnRwIDAQAB
  #接收商户总包付款的连薪回调通知地址
  merchantNotifyUrl: http://2181s627z8.qicp.vip/merchant/lianlianpay/merchantNotifyUrl
  #接收商户众包付款的连薪回调通知地址
  merchantManyNotifyUrl: http://2181s627z8.qicp.vip/merchant/lianlianpay/merchantManyNotifyUrl
  #接收付款给创客的连薪回调通知地址
  workerNotifyUrl: http://2181s627z8.qicp.vip/platform/lianlianpay/workerNotifyUrl
  url:
    #实时付款
    paymentapi: https://test.lianlianpay-inc.com/paymentapi/payment.htm
    #付款确认接口
    confirmPayment: https://test.lianlianpay-inc.com/paymentapi/confirmPayment.htm
    #查询商户余额接口
    selectRemainingSum: https://traderapi.lianlianpay.com/traderAcctQuery.htm
    #付款结果查询
    queryPayment: https://test.lianlianpay-inc.com/paymentapi/queryPayment.htm
