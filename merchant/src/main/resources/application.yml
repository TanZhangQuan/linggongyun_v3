server:
  port: 8081

spring:
  # 配置数据源
  datasource:
    # 填写你数据库的url、登录名、密码和数据库名
    url: jdbc:mysql://rm-uf6w14g8ziqg8se61uo.mysql.rds.aliyuncs.com:3306/linggongyun_v3?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
    username: root
    password: Slc_mysql@19
    # mysql驱动
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 使用阿里的Druid连接池（连接池指定 springboot2.02版本默认使用HikariCP 此处要替换成Druid）
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池的配置信息
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 5
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙(Druid中使用log4j2进行日志输出，这个配置时使用log4j2输出，其实用logback也可以)
      filters: stat,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # ！！！请勿配置timeBetweenLogStatsMillis 会定时输出日志 并导致统计的sql清零
      #spring.datasource.druid.timeBetweenLogStatsMillis=20000
      # WebStatFilter配置，说明请参考Druid Wiki
      webStatFilter:
        # 是否启用StatFilter默认值true
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # StatViewServlet配置，说明请参考Druid Wiki
      statViewServlet:
        #是否启用StatViewServlet默认值true
        enabled: true
        url-pattern: "/druid/*"
        #  禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 127.0.0.1
        # IP黑名单 (存在共同时，deny优先于allow)
        deny:
        # 登录名(登陆地址例如：http://localhost:8080/druid/login.html)
        login-username: admin
        # 登录密码
        login-password: 123456

  profiles:
      active: '@activatedProperties@'

  servlet:
    multipart:
      # 单个文件的最大值
      max-file-size: 40MB
      # 上传文件总的最大值
      max-request-size: 100MB

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    auto-mapping-behavior: full
    # sql 打印
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/*Mapper.xml
  type-aliases-package: classpath*:com.example.mybatis.entity

  global-config:
    # 逻辑删除配置
    db-config:
      # 删除前
      logic-not-delete-value: 1
      # 删除后
      logic-delete-value: 0

#微信Appid
APPID: "wx3870ff35a721932e"

SECRET: "cf6f1bcea8c984dc699d2e554f9b2bf6"

#
PWD_KEY: "esdafw"

#初始化主帐号
SMS:
  AccountSid: "8a216da873b27ace0173b30bff5d0079"

  #主帐号TOKEN
  AccountToken: "b12a28072550438486f44fce85ad3fe6"

  #初始化应用ID
  AppId: "8a216da873b27ace0173b30c00620081"

  #模板ID
  TemplateId: "624431"

  #初始化服务器地址,服务器地址不需要写https://
  serverIP: "app.cloopen.com"

  #初始化服务器端口
  serverPort: "8883"


TOKEN: token

JWT:
  secret: "yixi"

  expire: "7"

  header: "linggongyun_v3"

#本地图片存储路径
PathImage_KEY: "/root/linggongyun_v3/image/"

#本地excel存储路径
PathExcel_KEY: "/root/linggongyun_v3/excel/"

#本地视频存储路径
PathVideo_KEY: "/root/linggongyun_v3/video/"

#图片的访问路径
fileStaticAccesspathImage: "/static/image/"

#excel的访问路径
fileStaticAccesspathExcel: "/static/excel/"

#视频的访问路径
fileStaticAccesspathVideo: "/static/Video/"

#模板文件
TemplateFile:
  #  合同模板
  Contract: "/root/linggongyun_v3/TemplateFile/test.pdf"
  #  总包+分包支付明细模板
  TotalPayInventory: "/root/linggongyun_v3/TemplateFile/inventory.xlsx"
  #  众包支付明细模板
  ManyPayInventory: "/root/linggongyun_v3/TemplateFile/inventory.xlsx"
  #  总包+分包交付支付验收单
  TotalAcceptanceCertificate: "/root/linggongyun_v3/TemplateFile/acceptanceCertificate.xlsx"
  #  众包交付支付验收单
  ManyAcceptanceCertificate: "/root/linggongyun_v3/TemplateFile/acceptanceCertificate.xlsx"
  #  导入创客的模板
  ImportWorker: "/root/linggongyun_v3/TemplateFile/importWorker.xlsx"
  #  模板文件夹路径
  Path: "/root/linggongyun_v3/TemplateFile/"
  #  模板访问路径
  StaticAccesspath: "/static/TemplateFile/"

#发送签署合同应用的密钥
appSecret: "86d20a7f49bc3c4c20bae23d369d8853"

salary:
  #连连银通公钥（不需替换，这是连连公钥，用于报文加密和连连返回响应报文时验签，不是商户生成的公钥.)
  PUBLIC_KEY_ONLINE: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCSS/DiwdCf/aZsxxcacDnooGph3d2JOj5GXWi+q3gznZauZjkNP8SKl3J2liP0O6rU/Y/29+IUe+GTMhMOFJuZm1htAtKiu5ekW0GlBMWxf4FPkYlQkPE0FtaoMP3gYfh+OwI+fIRrpW3ySn3mScnc6Z700nU/VYrRkfcSCbSnRwIDAQAB
  #接收商户总包付款的连薪回调通知地址
  merchantNotifyUrl: http://2181s627z8.qicp.vip/merchant/lianlianpay/merchantNotifyUrl
  #接收商户众包付款的连薪回调通知地址
  merchantManyNotifyUrl: http://2181s627z8.qicp.vip/merchant/lianlianpay/merchantManyNotifyUrl
  #接收付款给创客的连薪回调通知地址
  workerNotifyUrl: http://2181s627z8.qicp.vip/platform/lianlianpay/workerNotifyUrl
  url:
    #实时付款
    paymentapi: https://test.lianlianpay-inc.com/paymentapi/payment.htm
    #付款确认接口
    confirmPayment: https://test.lianlianpay-inc.com/paymentapi/confirmPayment.htm
    #查询商户余额接口
    selectRemainingSum: https://traderapi.lianlianpay.com/traderAcctQuery.htm
    #付款结果查询
    queryPayment: https://test.lianlianpay-inc.com/paymentapi/queryPayment.htm
